name: Auto Deploy in VPS after Push in Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy project
    permissions:
      contents: read
      deployments: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.APP_URL }}
          environment: production

      - name: Set up SSH Key and Deploy my App on Server
        # run: |
        uses: appleboy/ssh-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd /var/www/efreitc-web/
            git pull
            pnpm i
            pnpm build
            pm2 restart efreitc-web

      - name: Update deployment Status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.APP_URL }}
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.APP_URL }}
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
